{"mappings":"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","sources":["src/index.ts","src/store/storeValue.ts","src/utils/type-utils.ts","src/operators/index.ts","src/operators/map.ts","src/operators/switchMap.ts","src/models/model.ts"],"sourcesContent":["export * from \"./store/storeValue\";\nexport * from \"./operators\";\nexport * from \"./models/model\";","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {\n    FuncSubscriber,\n    Subscription,\n    Subscriber,\n    ReactiveObject,\n    Operator,\n    SafeReactiveObject,\n    InnerSubscriber,\n    Store,\n} from \"../models/model\";\nimport { isFunction, isUndefined } from \"../utils/type-utils\";\n\n/**\n * Creates a reactive store\n * @param  {T} initialValue?\n * @returns Store\n */\nexport const StoreValue = <T>(initialValue?: T): Store<T> => {\n    let _val: any;\n    let _callbacks: FuncSubscriber<T>[] = [];\n    let _errorCallbacks: FuncSubscriber<T>[] = [];\n    let _onCompleteCallbacks: FuncSubscriber<T>[] = [];\n    let _innerSubscriptions: any[] = [];\n    const subscriptions: Subscription<T>[] = [];\n\n    const subscribe = (cb?: FuncSubscriber<T>, error?: any): Subscriber => {\n        cb && _callbacks.push(cb);\n        error && _errorCallbacks.push(error);\n\n        const subscription = { errId: error, subId: cb || undefined };\n        subscriptions.push(subscription);\n        cb?.call(null, _val);\n\n        return {\n            unsubcsribe: () => unsubscribe(subscription),\n        };\n    };\n\n    const unsubscribe = (subscription: Subscription<T>) => {\n        _callbacks = _callbacks.filter((c) => c !== subscription.subId);\n        _errorCallbacks = _errorCallbacks.filter((c) => c !== subscription.errId);\n        _innerSubscriptions.forEach((c) => (isFunction(c) ? c() : c.unsubcsribe()));\n        _innerSubscriptions = [];\n    };\n\n    const next = (val?: T) => {\n        _val = val;\n        _callbacks.forEach((cb) => cb.call(null, _val));\n    };\n\n    const complete = () => {\n        _callbacks.forEach((cb) => unsubscribe({ subId: cb }));\n        _onCompleteCallbacks.forEach((cb) => cb.call(null));\n        _onCompleteCallbacks = [];\n        _innerSubscriptions.forEach((c) => (isFunction(c) ? c() : c.unsubcsribe()));\n        _innerSubscriptions = [];\n    };\n\n    const onComplete = (cb: FuncSubscriber<T>) => {\n        _onCompleteCallbacks.push(cb);\n    };\n\n    const addInnerSubscriber = (subscriber: InnerSubscriber) => {\n        _innerSubscriptions.push(subscriber);\n    };\n\n    const cancelInnerSubscription = () => {\n        _innerSubscriptions.forEach((c) => (isFunction(c) ? c() : c.unsubcsribe()));\n        // _innerSubscriptions = [];\n    };\n\n    const asObservable = (): ReactiveObject<T> => {\n        return {\n            subscribe,\n            pipe,\n        };\n    };\n\n    const asSafeObservable = (): SafeReactiveObject<T> => {\n        return {\n            subscribe,\n            pipe,\n            addInnerSubscriber,\n            cancelInnerSubscription,\n            asObservable,\n        };\n    };\n\n    const store = {\n        subscribe,\n        next,\n        asObservable,\n        complete,\n        pipe,\n        onComplete,\n        addInnerSubscriber,\n        cancelInnerSubscription,\n        asSafeObservable,\n    };\n\n    function pipe(...args: Operator<T>[]) {\n        if (!args.length) {\n            return store;\n        }\n        return args.reduce((y, f) => f(y as any), store) as any;\n    }\n\n    /* function lift(operator: any) {\n    const c = StoreValue();\n    // c.operator = operator;\n  }\n  */\n\n    !isUndefined(initialValue) && next(initialValue);\n\n    return store;\n};\n","export const isFunction = (val: unknown): boolean => typeof val === \"function\";\nexport const isUndefined = (val: unknown) : boolean => typeof val === \"undefined\";\n","export * from \"./map\";\nexport * from \"./switchMap\";\n","import { Operator, OperatorSourceFn, ReactiveObject } from \"../models/model\";\nimport { StoreValue } from \"../store/storeValue\";\n\n\n/**\n * @param  {<T>(value:T} opFunc\n * @returns OperatorSourceFn\n */\nexport const map: Operator<unknown> = (opFunc: <T>(value: T) => unknown) => {\n    return (source: ReactiveObject<unknown>) => {\n        const mapSource = StoreValue();\n\n        const subscription = source.subscribe((c: any) => {\n            mapSource.next(opFunc(c));\n        });\n\n        mapSource.onComplete(() => subscription.unsubcsribe());\n\n        const mapSourceObservable = mapSource.asSafeObservable();\n\n        mapSourceObservable.addInnerSubscriber && mapSourceObservable.addInnerSubscriber(subscription);\n\n        return mapSourceObservable;\n    };\n};\n\n","import { Operator, OperatorSourceFn, ReactiveObject, Subscriber } from \"../models/model\";\nimport { StoreValue } from \"../store/storeValue\";\n\n/**\n * @param  {<T>(value:T} opFunc\n * @returns OperatorSourceFn\n */\nexport const switchMap: Operator<unknown> = (opFunc: <T>(value: T) => ReactiveObject<unknown>): OperatorSourceFn => {\n    return (source: ReactiveObject<unknown>) => {\n        const innerValue = StoreValue();\n        let sub: Subscriber | null = null;\n\n        let currentSub: { unsubcsribe: any } | null = null;\n\n        const addSub = () =>\n            innerValue.addInnerSubscriber(() => {\n                sub?.unsubcsribe();\n            });\n\n        // const cancelPreviousSubscription = () => sub.unsubcsribe();\n\n        sub = source.subscribe((c: any) => {\n            // innerValue.isComplete && innerValue.complete();\n            innerValue.cancelInnerSubscription && innerValue.cancelInnerSubscription();\n\n            currentSub?.unsubcsribe();\n            currentSub = opFunc(c).subscribe((c: any) => {\n                innerValue.next(c);\n            });\n            addSub();\n        });\n\n        // addSub();\n\n        return innerValue.asSafeObservable();\n    };\n};\n","export type FuncSubscriber<T> = (val?: T) => void;\n\nexport type Subscription<T> = {\n    errId?: FuncSubscriber<T>;\n    subId?: FuncSubscriber<T>;\n};\n\nexport type Subscriber = {\n    unsubcsribe: () => void;\n};\n\nexport type InnerSubscriber = Subscriber | (() => void);\n\nexport type ReactiveObject<T> = {\n    subscribe: (cb?: FuncSubscriber<T>, error?: FuncSubscriber<T>) => Subscriber;\n    pipe: (...operator: Operator<T>[]) => ReactiveObject<T> | any;\n};\n\nexport interface SafeReactiveObject<T> extends ReactiveObject<T> {\n    addInnerSubscriber: (subscriber: Subscriber | (() => void)) => void;\n    cancelInnerSubscription?: () => void;\n    asObservable: () => ReactiveObject<T>;\n}\n\nexport interface Store<T> extends SafeReactiveObject<T> {\n    next: (val?: T) => void;\n    asSafeObservable: () => SafeReactiveObject<T>;\n    complete: () => void;\n    onComplete: (fn: FuncSubscriber<T>) => void;\n}\n\nexport type OperatorSourceFn = (source: ReactiveObject<any>) => ReactiveObject<any>;\n\nexport type Operator<T> = (opFunc: (value: T) => ReactiveObject<T> | unknown) => any;\n"],"names":[],"version":3,"file":"index.js.map"}